name: Deploy release

on:
  push:
    branches:
      - release

env:
  EXCHANGE_WALLET_PUB: ${{secrets.EXCHANGE_WALLET_PUB}}
  GOOGLE_MAPS_API_KEY: ${{secrets.GOOGLE_MAPS_API_KEY}}
  SINGLE_ACCOUNT_MODE: ${{secrets.SINGLE_ACCOUNT_MODE}}
  ISSUER_ID: ${{secrets.ISSUER_ID}}
  SMART_METER_ID: ${{secrets.SMART_METER_ID}}
  REGISTRATION_MESSAGE_TO_SIGN: ${{secrets.REGISTRATION_MESSAGE_TO_SIGN}}

jobs:
  cancel-previous:
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  deploy-application:
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: 'origin'
          POSTGRES_PASSWORD: 'postgres'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10  
        ports:
          - 5432:5432
    runs-on: ubuntu-latest
    needs: cancel-previous
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup GIT user
      uses: fregante/setup-git-user@v1

    - uses: actions/setup-node@v2-beta
      with:
        node-version: '14'

    - name: Restore timestamp
      run: |
        sh scripts/restore-original-timestamps.sh

    - name: Install application
      # lerna doesn't work without additional fetch
      run: |
        git fetch origin master:master
        node common/scripts/install-run-rush.js install

    - name: Build application
      run: |
        node common/scripts/install-run-rush.js build

    - name: Build UI for production
      run: |
        node common/scripts/install-run-rush.js build:ui:prod
    
    - name: Build UI packages
      run: |
        node common/scripts/install-run-rush.js build:ui-packages

    - name: Build Storybook application
      run: node common/scripts/install-run-rush.js build:storybook

    - name: Run all test:ui:e2e
      env:
        WEB3: http://localhost:8545
        DEPLOY_KEY: d9066ff9f753a1898709b568119055660a77d9aae4d7a4ad677b8fb3d2a571e5
        INFLUXDB_URL: http://localhost:8086
        INFLUXDB_TOKEN: admin:admin
        INFLUXDB_BUCKET: energy/autogen
        BACKEND_URL: http://localhost:3030
        EXCHANGE_WALLET_PUB: '0xD173313A51f8fc37BcF67569b463abd89d81844f'
        EXCHANGE_WALLET_PRIV: '0xd9066ff9f753a1898709b568119055660a77d9aae4d7a4ad677b8fb3d2a571e5'
        EXCHANGE_ACCOUNT_DEPLOYER_PRIV: '0xd9066ff9f753a1898709b568119055660a77d9aae4d7a4ad677b8fb3d2a571e5'
        OPERATOR_ENCRYPTION_KEY: 'somerandompassword'
        IREC_CREATE_DEVICE_ISSUER: ''
      run: node common/scripts/install-run-rush.js test:ui:e2e

    - name: Set creds to npm 
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> $HOME/.npmrc

    - name: Login into docker hub 
      run: |
        wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
        echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

    - name: Release application
      if:  false == contains('skip-deploy', ${{ github.event.head_commit.message }})
      run: |
        yarn publish:release 
        npx sleep 5
        yarn build:containers:release
        yarn deploy:heroku:stable
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_STABLE_APP_API: ${{ secrets.HEROKU_STABLE_APP_API }}
          HEROKU_STABLE_APP_UI: ${{ secrets.HEROKU_STABLE_APP_UI }}
          HEROKU_STABLE_APP_SB: ${{ secrets.HEROKU_STABLE_APP_SB }}
